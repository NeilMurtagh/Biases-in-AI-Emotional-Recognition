# -*- coding: utf-8 -*-
"""Racial biases in Facial Emotional Recognition

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oy7UpiwGM2f-HwGA9zNWtV_H70Nx0cAc
"""

# For questions: +4915757112506

# this one "unzips" zip files in which pictures often are contained
# only execute if needed
from zipfile import ZipFile
file_name = "/content/Facial recognition dataset.zip"

with ZipFile(file_name, 'r') as zip:
  zip.extractall()
  print("Done")

# there you can load the model (you need to upload the file before)
from keras.models import load_model
emotion_model = load_model("/content/model.h5")

import numpy as np
import cv2
from keras.models import Sequential
from keras.layers import Dense, Dropout, Flatten
from keras.layers import Conv2D
from keras.optimizers import Adam
from keras.layers import MaxPooling2D
from keras.preprocessing.image import ImageDataGenerator
import matplotlib.pyplot as plt
import os
import pandas as pd

# this sets the the "counter" to zero
emotion_angry = 0
emotion_disgust = 0
emotion_fear = 0
emotion_happyness = 0
emotion_sadness = 0
emotion_surprise = 0
emotion_neutral = 0

# defines an emotional recognition algorithm
def emotion_analysis(emotions):
    objects = ('angry', 'disgust', 'fear', 'happy', 'sad', 'surprise', 'neutral')
    y_pos = np.arange(len(objects))
    
    bar =plt.bar(y_pos, emotions, align='center', alpha=0.5)
    plt.xticks(y_pos, objects)
    plt.ylabel('percentage')
    plt.title('emotion')

    plt.show()
    all_emotions = emotions.tolist()
    max_emotion = max(emotions)
    index = all_emotions.index(max_emotion) # this sees which emotion has the highest score
    global emotion_angry
    global emotion_disgust
    global emotion_fear
    global emotion_happyness
    global emotion_sadness
    global emotion_surprise
    global emotion_neutral
    # add the highest scoring emotion to the counter
    if index == 0:
      emotion_angry += 1
    elif index == 1:
      emotion_disgust += 1
    elif index == 2:
      emotion_fear += 1
    elif index == 3:
      emotion_happyness += 1
    elif index == 4:
      emotion_sadness += 1
    elif index == 5:
      emotion_surprise += 1
    else:
      emotion_neutral += 1

# Here we recognize the faces and apply the emotional_analysis

import tensorflow as tf
import cv2

def facial_recognition(file):

  def facecrop(image):  
      facedata = '/content/haarcascade_frontalface_alt.xml'
      cascade = cv2.CascadeClassifier(facedata)

      img = cv2.imread(image)

      try:
    
          minisize = (img.shape[1],img.shape[0])
          miniframe = cv2.resize(img, minisize)

          faces = cascade.detectMultiScale(miniframe)

          for f in faces:
              x, y, w, h = [ v for v in f ]
              cv2.rectangle(img, (x,y), (x+w,y+h), (0,255,0), 2)

              sub_face = img[y:y+h, x:x+w]

            
              cv2.imwrite('capture.jpg', sub_face)
              #print ("Writing: " + image)

      except Exception as e:
          print (e)

  if __name__ == '__main__':
      facecrop('file')

  #Testing a file.

  from keras.preprocessing import image
  from keras.preprocessing.image import ImageDataGenerator
  from keras.utils import img_to_array

  import numpy as np
  import matplotlib.pyplot as plt


  true_image = tf.keras.utils.load_img(file)
  img = tf.keras.utils.load_img(file, color_mode="grayscale", target_size=(48, 48))

  #x = image.img_to_array(img)
  x = img_to_array(img)
  x = np.expand_dims(x, axis = 0)

  x /= 255

  custom = emotion_model.predict(x)
  emotion_analysis(custom[0])

  x = np.array(x, 'float32')
  x = x.reshape([48, 48]);


  plt.imshow(true_image)
  plt.show()

# Important: the following cells should only be run one after another, as they will define and re-define variables (e.g. How_long_is _the_list)

"""## ***Anger: non-minority***
Import the pictures for anger
"""

# Here you can do a faces_list with all the pictures you want to test the model on

How_long_is_the_list = 802

integer_list = (range(1,How_long_is_the_list+1))
str_list = [str(x) for x in integer_list]

data = {"1": ["/content/anger ("]*How_long_is_the_list,"2": str_list, "3": [").png"]*How_long_is_the_list} # adapt the names of the pictures and the file tpye (png or jpg)
df = pd.DataFrame(data)
df["combined"] = df["1"]+df["2"]+df["3"]

picture_object = df["combined"]
faces_list = picture_object.tolist()
#faces_list = ["/content/angry_black.PNG", "/content/disgustj.jpg"]
print(faces_list)

# if the error "No such file or directory: '/content/xyz (2).png'" occurs, just upload this picture again
for i in faces_list:
  facial_recognition(i)

# TPR_here = TP / (FP+TN)

# true_positives = TP
# how_many_pictures_are_in_the_list = TP + FN

true_positives = emotion_angry # this is the emotion you want to analyse
how_many_pictures_are_in_the_list = emotion_angry + emotion_disgust + emotion_fear+emotion_happyness+emotion_sadness+emotion_surprise+emotion_neutral
TPR_here = true_positives/how_many_pictures_are_in_the_list

print("Anger_non-minority:")
print()
print("true_positives = "+ str(true_positives))
print("anger_how_many_pictures_are_in_the_list = "+str(how_many_pictures_are_in_the_list))
print("anger_TPR_here = "+str(TPR_here))

print()
print("anger_emotion_angry = "+str(emotion_angry))
print("anger_emotion_disgust = "+str(emotion_disgust))
print("anger_emotion_fear = "+str(emotion_fear))
print("anger_emotion_happyness = "+str(emotion_happyness))
print("anger_emotion_sadness = "+str(emotion_sadness))
print("anger_emotion_surprise = "+str(emotion_surprise))
print("anger_emotion_neutral = "+str(emotion_neutral))

anger_emotion_angry = emotion_angry
anger_emotion_disgust=emotion_disgust
anger_emotion_fear=emotion_fear
anger_emotion_happyness=emotion_happyness
anger_emotion_sadness=emotion_sadness
anger_emotion_surprise=emotion_surprise
anger_emotion_neutral=emotion_neutral

# this re-defines the measures as zero
emotion_angry = 0
emotion_disgust = 0
emotion_fear = 0
emotion_happyness = 0
emotion_sadness = 0
emotion_surprise = 0
emotion_neutral = 0

"""## **Anger: minority**"""

# Here you can do a faces_list with all the pictures you want to test the model on

How_long_is_the_list = 79

integer_list = (range(1,How_long_is_the_list+1))
str_list = [str(x) for x in integer_list]

data = {"1": ["/content/anger_minority ("]*How_long_is_the_list,"2": str_list, "3": [").png"]*How_long_is_the_list} # adapt the names of the pictures and the file tpye (png or jpg)
df = pd.DataFrame(data)
df["combined"] = df["1"]+df["2"]+df["3"]

picture_object = df["combined"]
faces_list = picture_object.tolist()

print(faces_list)

for i in faces_list:
  facial_recognition(i)

true_positives = emotion_angry # this is the emotion you want to analyse
how_many_pictures_are_in_the_list = emotion_angry + emotion_disgust + emotion_fear+emotion_happyness+emotion_sadness+emotion_surprise+emotion_neutral
TPR_here = true_positives/how_many_pictures_are_in_the_list

print("Anger_minority:")
print()
print("true_positives = "+ str(true_positives))
print("anger_minority_how_many_pictures_are_in_the_list = "+str(how_many_pictures_are_in_the_list))
print("anger_minority_TPR_here = "+str(TPR_here))

print()
print("anger_minority_emotion_angry = "+str(emotion_angry))
print("anger_minority_emotion_disgust = "+str(emotion_disgust))
print("anger_minority_emotion_fear = "+str(emotion_fear))
print("anger_minority_emotion_happyness = "+str(emotion_happyness))
print("anger_minority_emotion_sadness = "+str(emotion_sadness))
print("anger_minority_emotion_surprise = "+str(emotion_surprise))
print("anger_minority_emotion_neutral = "+str(emotion_neutral))


anger_minority_emotion_angry = emotion_angry
anger_minority_emotion_disgust=emotion_disgust
anger_minority_emotion_fear=emotion_fear
anger_minority_emotion_happyness=emotion_happyness
anger_minority_emotion_sadness=emotion_sadness
anger_minority_emotion_surprise=emotion_surprise
anger_minority_emotion_neutral=emotion_neutral

# this re-defines the measures as zero
emotion_angry = 0
emotion_disgust = 0
emotion_fear = 0
emotion_happyness = 0
emotion_sadness = 0
emotion_surprise = 0
emotion_neutral = 0

"""## **Disgust: non-minority**
Import the pictures for disgust. If this causes trouble for colab, disconnect runtime, reconnect and try again
"""

# Here you can do a faces_list with all the pictures you want to test the model on

How_long_is_the_list = 397

integer_list = (range(1,How_long_is_the_list+1))
str_list = [str(x) for x in integer_list]

data = {"1": ["/content/disgust ("]*How_long_is_the_list,"2": str_list, "3": [").png"]*How_long_is_the_list} # adapt the names of the pictures and the file tpye (png or jpg)
df = pd.DataFrame(data)
df["combined"] = df["1"]+df["2"]+df["3"]

picture_object = df["combined"]
faces_list = picture_object.tolist()

print(faces_list)

for i in faces_list:
  facial_recognition(i)

true_positives = emotion_disgust # this is the emotion you want to analyse
how_many_pictures_are_in_the_list = emotion_angry + emotion_disgust + emotion_fear+emotion_happyness+emotion_sadness+emotion_surprise+emotion_neutral
TPR_here = true_positives/how_many_pictures_are_in_the_list

print("Disgust_non-minority:")
print()
print("true_positives = "+ str(true_positives))
print("disgust_how_many_pictures_are_in_the_list = "+str(how_many_pictures_are_in_the_list))
print("disgust_TPR_here = "+str(TPR_here))

print()
print("disgust_emotion_angry = "+str(emotion_angry))
print("disgust_emotion_disgust = "+str(emotion_disgust))
print("disgust_emotion_fear = "+str(emotion_fear))
print("disgust_emotion_happyness = "+str(emotion_happyness))
print("disgust_emotion_sadness = "+str(emotion_sadness))
print("disgust_emotion_surprise = "+str(emotion_surprise))
print("disgust_emotion_neutral = "+str(emotion_neutral))

disgust_emotion_angry = emotion_angry
disgust_emotion_disgust=emotion_disgust
disgust_emotion_fear=emotion_fear
disgust_emotion_happyness=emotion_happyness
disgust_emotion_sadness=emotion_sadness
disgust_emotion_surprise=emotion_surprise
disgust_emotion_neutral=emotion_neutral

# this re-defines the measures as zero
emotion_angry = 0
emotion_disgust = 0
emotion_fear = 0
emotion_happyness = 0
emotion_sadness = 0
emotion_surprise = 0
emotion_neutral = 0

"""## **Disgust: minority**"""

# Here you can do a faces_list with all the pictures you want to test the model on

How_long_is_the_list = 36

integer_list = (range(1,How_long_is_the_list+1))
str_list = [str(x) for x in integer_list]

data = {"1": ["/content/disgust_minority ("]*How_long_is_the_list,"2": str_list, "3": [").png"]*How_long_is_the_list} # adapt the names of the pictures and the file tpye (png or jpg)
df = pd.DataFrame(data)
df["combined"] = df["1"]+df["2"]+df["3"]

picture_object = df["combined"]
faces_list = picture_object.tolist()

print(faces_list)

for i in faces_list:
  facial_recognition(i)

true_positives = emotion_disgust # this is the emotion you want to analyse
how_many_pictures_are_in_the_list = emotion_angry + emotion_disgust + emotion_fear+emotion_happyness+emotion_sadness+emotion_surprise+emotion_neutral
TPR_here = true_positives/how_many_pictures_are_in_the_list

print("Disgust_minority:")
print()
print("true_positives = "+ str(true_positives))
print("disgust_minority_how_many_pictures_are_in_the_list = "+str(how_many_pictures_are_in_the_list))
print("disgust_minority_TPR_here = "+str(TPR_here))

print()
print("disgust_minority_emotion_angry = "+str(emotion_angry))
print("disgust_minority_emotion_disgust = "+str(emotion_disgust))
print("disgust_minority_emotion_fear = "+str(emotion_fear))
print("disgust_minority_emotion_happyness = "+str(emotion_happyness))
print("disgust_minority_emotion_sadness = "+str(emotion_sadness))
print("disgust_minority_emotion_surprise = "+str(emotion_surprise))
print("disgust_minority_emotion_neutral = "+str(emotion_neutral))

disgust_minority_emotion_angry = emotion_angry
disgust_minority_emotion_disgust=emotion_disgust
disgust_minority_emotion_fear=emotion_fear
disgust_minority_emotion_happyness=emotion_happyness
disgust_minority_emotion_sadness=emotion_sadness
disgust_minority_emotion_surprise=emotion_surprise
disgust_minority_emotion_neutral=emotion_neutral

# this re-defines the measures as zero
emotion_angry = 0
emotion_disgust = 0
emotion_fear = 0
emotion_happyness = 0
emotion_sadness = 0
emotion_surprise = 0
emotion_neutral = 0

"""## **Fear: non-minority**
Import the pictures for fear. If this causes trouble for colab, disconnect runtime, reconnect and try again
"""

# Here you can do a faces_list with all the pictures you want to test the model on

How_long_is_the_list = 524

integer_list = (range(1,How_long_is_the_list+1))
str_list = [str(x) for x in integer_list]

data = {"1": ["/content/fear ("]*How_long_is_the_list,"2": str_list, "3": [").png"]*How_long_is_the_list} # adapt the names of the pictures and the file tpye (png or jpg)
df = pd.DataFrame(data)
df["combined"] = df["1"]+df["2"]+df["3"]

picture_object = df["combined"]
faces_list = picture_object.tolist()

print(faces_list)

for i in faces_list:
  facial_recognition(i)

true_positives = emotion_fear # this is the emotion you want to analyse
how_many_pictures_are_in_the_list = emotion_angry + emotion_disgust + emotion_fear+emotion_happyness+emotion_sadness+emotion_surprise+emotion_neutral
TPR_here = true_positives/how_many_pictures_are_in_the_list

print("Fear_non-minority:")
print()
print("true_positives = "+ str(true_positives))
print("fear_how_many_pictures_are_in_the_list = "+str(how_many_pictures_are_in_the_list))
print("fear_TPR_here = "+str(TPR_here))

print()
print("fear_emotion_angry = "+str(emotion_angry))
print("fear_emotion_disgust = "+str(emotion_disgust))
print("fear_emotion_fear = "+str(emotion_fear))
print("fear_emotion_happyness = "+str(emotion_happyness))
print("fear_emotion_sadness = "+str(emotion_sadness))
print("fear_emotion_surprise = "+str(emotion_surprise))
print("fear_emotion_neutral = "+str(emotion_neutral))

fear_emotion_angry = emotion_angry
fear_emotion_disgust=emotion_disgust
fear_emotion_fear=emotion_fear
fear_emotion_happyness=emotion_happyness
fear_emotion_sadness=emotion_sadness
fear_emotion_surprise=emotion_surprise
fear_emotion_neutral=emotion_neutral

# this re-defines the measures as zero
emotion_angry = 0
emotion_disgust = 0
emotion_fear = 0
emotion_happyness = 0
emotion_sadness = 0
emotion_surprise = 0
emotion_neutral = 0

"""## **Fear: minority**"""

# Here you can do a faces_list with all the pictures you want to test the model on

How_long_is_the_list = 31

integer_list = (range(1,How_long_is_the_list+1))
str_list = [str(x) for x in integer_list]

data = {"1": ["/content/fear_minority ("]*How_long_is_the_list,"2": str_list, "3": [").png"]*How_long_is_the_list} # adapt the names of the pictures and the file tpye (png or jpg)
df = pd.DataFrame(data)
df["combined"] = df["1"]+df["2"]+df["3"]

picture_object = df["combined"]
faces_list = picture_object.tolist()

print(faces_list)

for i in faces_list:
  facial_recognition(i)

true_positives = emotion_fear # this is the emotion you want to analyse
how_many_pictures_are_in_the_list = emotion_angry + emotion_disgust + emotion_fear+emotion_happyness+emotion_sadness+emotion_surprise+emotion_neutral
TPR_here = true_positives/how_many_pictures_are_in_the_list

print("Fear_minority:")
print()
print("true_positives = "+ str(true_positives))
print("fear_minority_how_many_pictures_are_in_the_list = "+str(how_many_pictures_are_in_the_list))
print("fear_minority_TPR_here = "+str(TPR_here))

print()
print("fear_minority_emotion_angry = "+str(emotion_angry))
print("fear_minority_emotion_disgust = "+str(emotion_disgust))
print("fear_minority_emotion_fear = "+str(emotion_fear))
print("fear_minority_emotion_happyness = "+str(emotion_happyness))
print("fear_minority_emotion_sadness = "+str(emotion_sadness))
print("fear_minority_emotion_surprise = "+str(emotion_surprise))
print("fear_minority_emotion_neutral = "+str(emotion_neutral))

fear_minority_emotion_angry = emotion_angry
fear_minority_emotion_disgust=emotion_disgust
fear_minority_emotion_fear=emotion_fear
fear_minority_emotion_happyness=emotion_happyness
fear_minority_emotion_sadness=emotion_sadness
fear_minority_emotion_surprise=emotion_surprise
fear_minority_emotion_neutral=emotion_neutral

# this re-defines the measures as zero
emotion_angry = 0
emotion_disgust = 0
emotion_fear = 0
emotion_happyness = 0
emotion_sadness = 0
emotion_surprise = 0
emotion_neutral = 0

"""## **Happyness: non-minority**
Import the pictures for happyness. If this causes trouble for colab, disconnect runtime, reconnect and try again
"""

# Here you can do a faces_list with all the pictures you want to test the model on

How_long_is_the_list = 1177

integer_list = (range(1,How_long_is_the_list+1))
str_list = [str(x) for x in integer_list]

data = {"1": ["/content/happyness ("]*How_long_is_the_list,"2": str_list, "3": [").png"]*How_long_is_the_list} # adapt the names of the pictures and the file tpye (png or jpg)
df = pd.DataFrame(data)
df["combined"] = df["1"]+df["2"]+df["3"]

picture_object = df["combined"]
faces_list = picture_object.tolist()

print(faces_list)

for i in faces_list:
  facial_recognition(i)

true_positives = emotion_happyness # this is the emotion you want to analyse
how_many_pictures_are_in_the_list = emotion_angry + emotion_disgust + emotion_fear+emotion_happyness+emotion_sadness+emotion_surprise+emotion_neutral
TPR_here = true_positives/how_many_pictures_are_in_the_list

print("Happiness: non-minority")
print()
print("true_positives = "+ str(true_positives))
print("how_many_pictures_are_in_the_list = "+str(how_many_pictures_are_in_the_list))
print("TPR_here = "+str(TPR_here))

print()
print("emotion_angry = "+str(emotion_angry))
print("emotion_disgust = "+str(emotion_disgust))
print("emotion_fear = "+str(emotion_fear))
print("emotion_happyness = "+str(emotion_happyness))
print("emotion_sadness = "+str(emotion_sadness))
print("emotion_surprise = "+str(emotion_surprise))
print("emotion_neutral = "+str(emotion_neutral))

happyness_emotion_angry = emotion_angry
happyness_emotion_disgust=emotion_disgust
happyness_emotion_fear=emotion_fear
happyness_emotion_happyness=emotion_happyness
happyness_emotion_sadness=emotion_sadness
happyness_emotion_surprise=emotion_surprise
happyness_emotion_neutral=emotion_neutral

# this re-defines the measures as zero
emotion_angry = 0
emotion_disgust = 0
emotion_fear = 0
emotion_happyness = 0
emotion_sadness = 0
emotion_surprise = 0
emotion_neutral = 0

"""## **Happyness: minority**"""

# Here you can do a faces_list with all the pictures you want to test the model on

How_long_is_the_list = 221

integer_list = (range(1,How_long_is_the_list+1))
str_list = [str(x) for x in integer_list]

data = {"1": ["/content/happyness_minority ("]*How_long_is_the_list,"2": str_list, "3": [").png"]*How_long_is_the_list} # adapt the names of the pictures and the file tpye (png or jpg)
df = pd.DataFrame(data)
df["combined"] = df["1"]+df["2"]+df["3"]

picture_object = df["combined"]
faces_list = picture_object.tolist()

print(faces_list)

for i in faces_list:
  facial_recognition(i)

true_positives = emotion_happyness # this is the emotion you want to analyse
how_many_pictures_are_in_the_list = emotion_angry + emotion_disgust + emotion_fear+emotion_happyness+emotion_sadness+emotion_surprise+emotion_neutral
TPR_here = true_positives/how_many_pictures_are_in_the_list

print("Happiness: minority")
print()
print("true_positives = "+ str(true_positives))
print("how_many_pictures_are_in_the_list = "+str(how_many_pictures_are_in_the_list))
print("TPR_here = "+str(TPR_here))

print()
print("emotion_angry = "+str(emotion_angry))
print("emotion_disgust = "+str(emotion_disgust))
print("emotion_fear = "+str(emotion_fear))
print("emotion_happyness = "+str(emotion_happyness))
print("emotion_sadness = "+str(emotion_sadness))
print("emotion_surprise = "+str(emotion_surprise))
print("emotion_neutral = "+str(emotion_neutral))

happyness_minority_emotion_angry = emotion_angry
happyness_minority_emotion_disgust=emotion_disgust
happyness_minority_emotion_fear=emotion_fear
happyness_minority_emotion_happyness=emotion_happyness
happyness_minority_emotion_sadness=emotion_sadness
happyness_minority_emotion_surprise=emotion_surprise
happyness_minority_emotion_neutral=emotion_neutral

# this re-defines the measures as zero
emotion_angry = 0
emotion_disgust = 0
emotion_fear = 0
emotion_happyness = 0
emotion_sadness = 0
emotion_surprise = 0
emotion_neutral = 0

"""## **Neutrality: non-minority**
Import the pictures for neutrality. If this causes trouble for colab, disconnect runtime, reconnect and try again
"""

# Here you can do a faces_list with all the pictures you want to test the model on

How_long_is_the_list = 437

integer_list = (range(1,How_long_is_the_list+1))
str_list = [str(x) for x in integer_list]

data = {"1": ["/content/neutrality ("]*How_long_is_the_list,"2": str_list, "3": [").png"]*How_long_is_the_list} # adapt the names of the pictures and the file tpye (png or jpg)
df = pd.DataFrame(data)
df["combined"] = df["1"]+df["2"]+df["3"]

picture_object = df["combined"]
faces_list = picture_object.tolist()

print(faces_list)

for i in faces_list:
  facial_recognition(i)

true_positives = emotion_neutral # this is the emotion you want to analyse
how_many_pictures_are_in_the_list = emotion_angry + emotion_disgust + emotion_fear+emotion_happyness+emotion_sadness+emotion_surprise+emotion_neutral
TPR_here = true_positives/how_many_pictures_are_in_the_list

print("Neutrality: non-minority")
print()
print("true_positives = "+ str(true_positives))
print("how_many_pictures_are_in_the_list = "+str(how_many_pictures_are_in_the_list))
print("TPR_here = "+str(TPR_here))

print()
print("emotion_angry = "+str(emotion_angry))
print("emotion_disgust = "+str(emotion_disgust))
print("emotion_fear = "+str(emotion_fear))
print("emotion_happyness = "+str(emotion_happyness))
print("emotion_sadness = "+str(emotion_sadness))
print("emotion_surprise = "+str(emotion_surprise))
print("emotion_neutral = "+str(emotion_neutral))

neutrality_emotion_angry = emotion_angry
neutrality_emotion_disgust=emotion_disgust
neutrality_emotion_fear=emotion_fear
neutrality_emotion_happyness=emotion_happyness
neutrality_emotion_sadness=emotion_sadness
neutrality_emotion_surprise=emotion_surprise
neutrality_emotion_neutral=emotion_neutral

# this re-defines the measures as zero
emotion_angry = 0
emotion_disgust = 0
emotion_fear = 0
emotion_happyness = 0
emotion_sadness = 0
emotion_surprise = 0
emotion_neutral = 0

"""## Neutrality: minority"""

# Here you can do a faces_list with all the pictures you want to test the model on

How_long_is_the_list = 82

integer_list = (range(1,How_long_is_the_list+1))
str_list = [str(x) for x in integer_list]

data = {"1": ["/content/neutrality_minority ("]*How_long_is_the_list,"2": str_list, "3": [").png"]*How_long_is_the_list} # adapt the names of the pictures and the file tpye (png or jpg)
df = pd.DataFrame(data)
df["combined"] = df["1"]+df["2"]+df["3"]

picture_object = df["combined"]
faces_list = picture_object.tolist()

print(faces_list)

for i in faces_list:
  facial_recognition(i)

true_positives = emotion_neutral # this is the emotion you want to analyse
how_many_pictures_are_in_the_list = emotion_angry + emotion_disgust + emotion_fear+emotion_happyness+emotion_sadness+emotion_surprise+emotion_neutral
TPR_here = true_positives/how_many_pictures_are_in_the_list

print("Neutrality: minority")
print()
print("true_positives = "+ str(true_positives))
print("how_many_pictures_are_in_the_list = "+str(how_many_pictures_are_in_the_list))
print("TPR_here = "+str(TPR_here))

print()
print("emotion_angry = "+str(emotion_angry))
print("emotion_disgust = "+str(emotion_disgust))
print("emotion_fear = "+str(emotion_fear))
print("emotion_happyness = "+str(emotion_happyness))
print("emotion_sadness = "+str(emotion_sadness))
print("emotion_surprise = "+str(emotion_surprise))
print("emotion_neutral = "+str(emotion_neutral))

neutrality_minority_emotion_angry = emotion_angry
neutrality_minority_emotion_disgust=emotion_disgust
neutrality_minority_emotion_fear=emotion_fear
neutrality_minority_emotion_happyness=emotion_happyness
neutrality_minority_emotion_sadness=emotion_sadness
neutrality_minority_emotion_surprise=emotion_surprise
neutrality_minority_emotion_neutral=emotion_neutral

# this re-defines the measures as zero
emotion_angry = 0
emotion_disgust = 0
emotion_fear = 0
emotion_happyness = 0
emotion_sadness = 0
emotion_surprise = 0
emotion_neutral = 0

"""## **Sadness: non-minority**"""

# Here you can do a faces_list with all the pictures you want to test the model on

How_long_is_the_list = 624

integer_list = (range(1,How_long_is_the_list+1))
str_list = [str(x) for x in integer_list]

data = {"1": ["/content/sadness ("]*How_long_is_the_list,"2": str_list, "3": [").png"]*How_long_is_the_list} # adapt the names of the pictures and the file tpye (png or jpg)
df = pd.DataFrame(data)
df["combined"] = df["1"]+df["2"]+df["3"]

picture_object = df["combined"]
faces_list = picture_object.tolist()

print(faces_list)

for i in faces_list:
  facial_recognition(i)

true_positives = emotion_sadness # this is the emotion you want to analyse
how_many_pictures_are_in_the_list = emotion_angry + emotion_disgust + emotion_fear+emotion_happyness+emotion_sadness+emotion_surprise+emotion_neutral
TPR_here = true_positives/how_many_pictures_are_in_the_list

print("Neutrality: non-minority")
print()
print("true_positives = "+ str(true_positives))
print("how_many_pictures_are_in_the_list = "+str(how_many_pictures_are_in_the_list))
print("TPR_here = "+str(TPR_here))

print()
print("emotion_angry = "+str(emotion_angry))
print("emotion_disgust = "+str(emotion_disgust))
print("emotion_fear = "+str(emotion_fear))
print("emotion_happyness = "+str(emotion_happyness))
print("emotion_sadness = "+str(emotion_sadness))
print("emotion_surprise = "+str(emotion_surprise))
print("emotion_neutral = "+str(emotion_neutral))

sadness_emotion_angry = emotion_angry
sadness_emotion_disgust=emotion_disgust
sadness_emotion_fear=emotion_fear
sadness_emotion_happyness=emotion_happyness
sadness_emotion_sadness=emotion_sadness
sadness_emotion_surprise=emotion_surprise
sadness_emotion_neutral=emotion_neutral

# this re-defines the measures as zero
emotion_angry = 0
emotion_disgust = 0
emotion_fear = 0
emotion_happyness = 0
emotion_sadness = 0
emotion_surprise = 0
emotion_neutral = 0

"""## Sadness: minority"""

# Here you can do a faces_list with all the pictures you want to test the model on

How_long_is_the_list = 115

integer_list = (range(1,How_long_is_the_list+1))
str_list = [str(x) for x in integer_list]

data = {"1": ["/content/sadness_minority ("]*How_long_is_the_list,"2": str_list, "3": [").png"]*How_long_is_the_list} # adapt the names of the pictures and the file tpye (png or jpg)
df = pd.DataFrame(data)
df["combined"] = df["1"]+df["2"]+df["3"]

picture_object = df["combined"]
faces_list = picture_object.tolist()

print(faces_list)

for i in faces_list:
  facial_recognition(i)

true_positives = emotion_sadness # this is the emotion you want to analyse
how_many_pictures_are_in_the_list = emotion_angry + emotion_disgust + emotion_fear+emotion_happyness+emotion_sadness+emotion_surprise+emotion_neutral
TPR_here = true_positives/how_many_pictures_are_in_the_list

print("Sadness: minority")
print()
print("true_positives = "+ str(true_positives))
print("how_many_pictures_are_in_the_list = "+str(how_many_pictures_are_in_the_list))
print("TPR_here = "+str(TPR_here))

print()
print("emotion_angry = "+str(emotion_angry))
print("emotion_disgust = "+str(emotion_disgust))
print("emotion_fear = "+str(emotion_fear))
print("emotion_happyness = "+str(emotion_happyness))
print("emotion_sadness = "+str(emotion_sadness))
print("emotion_surprise = "+str(emotion_surprise))
print("emotion_neutral = "+str(emotion_neutral))

sadness_minority_emotion_angry = emotion_angry
sadness_minority_emotion_disgust=emotion_disgust
sadness_minority_emotion_fear=emotion_fear
sadness_minority_emotion_happyness=emotion_happyness
sadness_minority_emotion_sadness=emotion_sadness
sadness_minority_emotion_surprise=emotion_surprise
sadness_minority_emotion_neutral=emotion_neutral

# this re-defines the measures as zero
emotion_angry = 0
emotion_disgust = 0
emotion_fear = 0
emotion_happyness = 0
emotion_sadness = 0
emotion_surprise = 0
emotion_neutral = 0

"""## **Surprise: non-minority**
Import the pictures for sadness. If this causes trouble for colab, disconnect runtime, reconnect and try again
"""

# Here you can do a faces_list with all the pictures you want to test the model on

How_long_is_the_list = 657

integer_list = (range(1,How_long_is_the_list+1))
str_list = [str(x) for x in integer_list]

data = {"1": ["/content/surprise ("]*How_long_is_the_list,"2": str_list, "3": [").png"]*How_long_is_the_list} # adapt the names of the pictures and the file tpye (png or jpg)
df = pd.DataFrame(data)
df["combined"] = df["1"]+df["2"]+df["3"]

picture_object = df["combined"]
faces_list = picture_object.tolist()

print(faces_list)

for i in faces_list:
  facial_recognition(i)

true_positives = emotion_surprise # this is the emotion you want to analyse
how_many_pictures_are_in_the_list = emotion_angry + emotion_disgust + emotion_fear+emotion_happyness+emotion_sadness+emotion_surprise+emotion_neutral
TPR_here = true_positives/how_many_pictures_are_in_the_list

print("Surprise: non-minority")
print()
print("true_positives = "+ str(true_positives))
print("how_many_pictures_are_in_the_list = "+str(how_many_pictures_are_in_the_list))
print("TPR_here = "+str(TPR_here))

print()
print("emotion_angry = "+str(emotion_angry))
print("emotion_disgust = "+str(emotion_disgust))
print("emotion_fear = "+str(emotion_fear))
print("emotion_happyness = "+str(emotion_happyness))
print("emotion_sadness = "+str(emotion_sadness))
print("emotion_surprise = "+str(emotion_surprise))
print("emotion_neutral = "+str(emotion_neutral))

surprise_emotion_angry = emotion_angry
surprise_emotion_disgust=emotion_disgust
surprise_emotion_fear=emotion_fear
surprise_emotion_happyness=emotion_happyness
surprise_emotion_sadness=emotion_sadness
surprise_emotion_surprise=emotion_surprise
surprise_emotion_neutral=emotion_neutral

# this re-defines the measures as zero
emotion_angry = 0
emotion_disgust = 0
emotion_fear = 0
emotion_happyness = 0
emotion_sadness = 0
emotion_surprise = 0
emotion_neutral = 0

"""## **Surprise: minority**"""

# Here you can do a faces_list with all the pictures you want to test the model on

How_long_is_the_list = 114

integer_list = (range(1,How_long_is_the_list+1))
str_list = [str(x) for x in integer_list]

data = {"1": ["/content/surprise_minority ("]*How_long_is_the_list,"2": str_list, "3": [").png"]*How_long_is_the_list} # adapt the names of the pictures and the file tpye (png or jpg)
df = pd.DataFrame(data)
df["combined"] = df["1"]+df["2"]+df["3"]

picture_object = df["combined"]
faces_list = picture_object.tolist()

print(faces_list)

for i in faces_list:
  facial_recognition(i)

true_positives = emotion_surprise # this is the emotion you want to analyse
how_many_pictures_are_in_the_list = emotion_angry + emotion_disgust + emotion_fear+emotion_happyness+emotion_sadness+emotion_surprise+emotion_neutral
TPR_here = true_positives/how_many_pictures_are_in_the_list

print("Surprise: minority")
print()
print("true_positives = "+ str(true_positives))
print("how_many_pictures_are_in_the_list = "+str(how_many_pictures_are_in_the_list))
print("TPR_here = "+str(TPR_here))

print()
print("emotion_angry = "+str(emotion_angry))
print("emotion_disgust = "+str(emotion_disgust))
print("emotion_fear = "+str(emotion_fear))
print("emotion_happyness = "+str(emotion_happyness))
print("emotion_sadness = "+str(emotion_sadness))
print("emotion_surprise = "+str(emotion_surprise))
print("emotion_neutral = "+str(emotion_neutral))

surprise_minority_emotion_angry = emotion_angry
surprise_minority_emotion_disgust=emotion_disgust
surprise_minority_emotion_fear=emotion_fear
surprise_minority_emotion_happyness=emotion_happyness
surprise_minority_emotion_sadness=emotion_sadness
surprise_minority_emotion_surprise=emotion_surprise
surprise_minority_emotion_neutral=emotion_neutral

# this re-defines the measures as zero
emotion_angry = 0
emotion_disgust = 0
emotion_fear = 0
emotion_happyness = 0
emotion_sadness = 0
emotion_surprise = 0
emotion_neutral = 0

"""# **Analysis**"""

#Anger_non-minority:
 
#true_positives = 331
anger_how_many_pictures_are_in_the_list = 802
anger_TPR_here = 0.41271820448877805

anger_emotion_angry = 331
anger_emotion_disgust = 9
anger_emotion_fear = 41
anger_emotion_happyness = 140
anger_emotion_sadness = 125
anger_emotion_surprise = 2
anger_emotion_neutral = 154
 
#Anger_minority:
 
#true_positives = 29
anger_minority_how_many_pictures_are_in_the_list = 79
anger_minority_TPR_here = 0.3670886075949367
 
anger_minority_emotion_angry = 29
anger_minority_emotion_disgust = 2
anger_minority_emotion_fear = 1
anger_minority_emotion_happyness = 22
anger_minority_emotion_sadness = 10
anger_minority_emotion_surprise = 1
anger_minority_emotion_neutral = 14
 
 
#Disgust_non-minority:
 
#true_positives = 36
disgust_how_many_pictures_are_in_the_list = 397
disgust_TPR_here = 0.0906801007556675
 
disgust_emotion_angry = 102
disgust_emotion_disgust = 36
disgust_emotion_fear = 19
disgust_emotion_happyness = 99
disgust_emotion_sadness = 101
disgust_emotion_surprise = 3
disgust_emotion_neutral = 37
 

#Disgust_minority:
 
#true_positives = 4
disgust_minority_how_many_pictures_are_in_the_list = 36
disgust_minority_TPR_here = 0.1111111111111111
 
disgust_minority_emotion_angry = 5
disgust_minority_emotion_disgust = 4
disgust_minority_emotion_fear = 1
disgust_minority_emotion_happyness = 8
disgust_minority_emotion_sadness = 8
disgust_minority_emotion_surprise = 0
disgust_minority_emotion_neutral = 10


#Fear_non-minority:

#true_positives = 136
fear_how_many_pictures_are_in_the_list = 524
fear_TPR_here = 0.2595419847328244

fear_emotion_angry = 51
fear_emotion_disgust = 4
fear_emotion_fear = 136
fear_emotion_happyness = 92
fear_emotion_sadness = 84
fear_emotion_surprise = 52
fear_emotion_neutral = 105
 
 
#Fear_minority:
 
#true_positives = 3
fear_minority_how_many_pictures_are_in_the_list = 31
fear_minority_TPR_here = 0.0967741935483871
 
fear_minority_emotion_angry = 4
fear_minority_emotion_disgust = 0
fear_minority_emotion_fear = 3
fear_minority_emotion_happyness = 6
fear_minority_emotion_sadness = 4
fear_minority_emotion_surprise = 2
fear_minority_emotion_neutral = 12
 
 
# emotions_for_happyness, non-minority
 
true_positives = 1080
happyness_how_many_pictures_are_in_the_list = 1177
happyness_TPR_here = 0.9175870858113849
 
happyness_emotion_angry = 9
happyness_emotion_disgust = 1
happyness_emotion_fear = 6
happyness_emotion_happyness = 1080
happyness_emotion_sadness = 35
happyness_emotion_surprise = 3
happyness_emotion_neutral = 43
 
 
# emotions_for_happyness, minority
 
true_positives = 204
happyness_minority_how_many_pictures_are_in_the_list = 221
happyness_minority_TPR_here = 0.9230769230769231
 
happyness_minority_emotion_angry = 1
happyness_minority_emotion_disgust = 0
happyness_minority_emotion_fear = 1
happyness_minority_emotion_happyness = 204
happyness_minority_emotion_sadness = 5
happyness_minority_emotion_surprise = 0
happyness_minority_emotion_neutral = 10
 
 
# emotions_for_neutrality, non-minority
 
true_positives = 216
neutrality_how_many_pictures_are_in_the_list = 437
neutrality_TPR_here = 0.494279176201373
 
neutrality_emotion_angry = 37
neutrality_emotion_disgust = 0
neutrality_emotion_fear = 18
neutrality_emotion_happyness = 94
neutrality_emotion_sadness = 72
neutrality_emotion_surprise = 0
neutrality_emotion_neutral = 216

 
# emotions_for_neutrality, minority
 
true_positives = 45
neutrality_minority_how_many_pictures_are_in_the_list = 82
neutrality_minority_TPR_here = 0.5487804878048781
 
neutrality_minority_emotion_angry = 4
neutrality_minority_emotion_disgust = 0
neutrality_minority_emotion_fear = 0
neutrality_minority_emotion_happyness = 19
neutrality_minority_emotion_sadness = 14
neutrality_minority_emotion_surprise = 0
neutrality_minority_emotion_neutral = 45
 
 
 
# emotions_for_sadness, non-minority
 
true_positives = 270
sadness_how_many_pictures_are_in_the_list = 624
sadness_TPR_here = 0.4326923076923077
 
sadness_emotion_angry = 52
sadness_emotion_disgust = 6
sadness_emotion_fear = 33
sadness_emotion_happyness = 87
sadness_emotion_sadness = 270
sadness_emotion_surprise = 0
sadness_emotion_neutral = 176
 
 
# emotions_for_sadness, minority
 
true_positives = 42
sadness_minority_how_many_pictures_are_in_the_list = 115
sadness_minority_TPR_here = 0.3652173913043478
 
sadness_minority_emotion_angry = 15
sadness_minority_emotion_disgust = 1
sadness_minority_emotion_fear = 0
sadness_minority_emotion_happyness = 12
sadness_minority_emotion_sadness = 42
sadness_minority_emotion_surprise = 0
sadness_minority_emotion_neutral = 45


#Surprise: non-minority

#true_positives = 195
surprise_how_many_pictures_are_in_the_list = 657
TPR_here = 0.2968036529680365

emotion_angry = 33
emotion_disgust = 2
emotion_fear = 90
emotion_happyness = 199
emotion_sadness = 35
emotion_surprise = 195
emotion_neutral = 103
 

# emotions_for_surprise, minority
 
true_positives = 31
surprise_minority_how_many_pictures_are_in_the_list = 114
surprise_minority_TPR_here = 0.2719298245614035

surprise_minority_emotion_angry = 12
surprise_minority_emotion_disgust = 0
surprise_minority_emotion_fear = 9
surprise_minority_emotion_happyness = 30
surprise_minority_emotion_sadness = 6
surprise_minority_emotion_surprise = 31
surprise_minority_emotion_neutral = 26

#how many non-minority pictures are there
all_non_minority_pictures = anger_how_many_pictures_are_in_the_list+disgust_how_many_pictures_are_in_the_list+fear_how_many_pictures_are_in_the_list+happyness_how_many_pictures_are_in_the_list+neutrality_how_many_pictures_are_in_the_list+sadness_how_many_pictures_are_in_the_list+surprise_how_many_pictures_are_in_the_list
all_non_minority_pictures

#how many minority pictures are there
all_minority_pictures = anger_minority_how_many_pictures_are_in_the_list+ disgust_minority_how_many_pictures_are_in_the_list+ fear_minority_how_many_pictures_are_in_the_list+ happyness_minority_how_many_pictures_are_in_the_list+ neutrality_minority_how_many_pictures_are_in_the_list+ sadness_minority_how_many_pictures_are_in_the_list+ surprise_minority_how_many_pictures_are_in_the_list
all_minority_pictures

#total number of analysed pictures
all_non_minority_pictures+all_minority_pictures

# This calculates the "accuracy" rate. We use an adapted formula of TP/Total pictures. Due to the nature of our study, it does not really make sense to measure True Negatives here.
how_many_non_minority_pictures_were_accurate = anger_emotion_angry+disgust_emotion_disgust+fear_emotion_fear+happyness_emotion_happyness+neutrality_emotion_neutral+sadness_emotion_sadness+surprise_emotion_surprise
print("how_many_non_minority_pictures_were_accurate = "+str(how_many_non_minority_pictures_were_accurate))
accuracy_rate_non_minority = how_many_non_minority_pictures_were_accurate/all_non_minority_pictures
print("accuracy_rate_non_minority = "+ str(accuracy_rate_non_minority))

# This calculates the "accuracy" rate. We use an adapted formula of TP/Total pictures. Due to the nature of our study, it does not really make sense to measure True Negatives here.
how_many_minority_pictures_were_accurate = anger_minority_emotion_angry+disgust_minority_emotion_disgust+fear_minority_emotion_fear+happyness_minority_emotion_happyness+neutrality_minority_emotion_neutral+sadness_minority_emotion_sadness+surprise_minority_emotion_surprise
print("how_many_minority_pictures_were_accurate = "+str(how_many_minority_pictures_were_accurate))
accuracy_rate_minority = how_many_minority_pictures_were_accurate/all_minority_pictures
print("accuracy_rate_minority = "+ str(accuracy_rate_minority))

# This calculates the "accuracy" rate. We use an adapted formula of TP/Total pictures. Due to the nature of our study, it does not really make sense to measure True Negatives here.
overall_accuracy_rate = (how_many_non_minority_pictures_were_accurate+how_many_minority_pictures_were_accurate)/(all_non_minority_pictures+all_minority_pictures)
print("overall_accuracy_rate = "+ str(overall_accuracy_rate))

# Calculating the False Positives and the False Positive Rate: FP/(FP+TN) = "group"_misidentified_as_"emotion" / (all_"group"_pictures - "emotion"_"group"_how_many_pictures_are_in_the_list)

# with "group" being either minority or non-minority and "emotion" being anger or fear etc.

#"group"_misidentified_as_"emotion" = FP
# all_"group"_pictures = TP + FP + TN
# "emotion"_"group"_how_many_pictures_are_in_the_list = TP

minority_misidentified_as_angry = disgust_minority_emotion_angry+ fear_minority_emotion_angry+ happyness_minority_emotion_angry+ neutrality_minority_emotion_angry+ sadness_minority_emotion_angry+ surprise_minority_emotion_angry
print(minority_misidentified_as_angry)
rate_of_minority_misidentified_as_angry = minority_misidentified_as_angry/(all_minority_pictures-anger_minority_how_many_pictures_are_in_the_list)
print(rate_of_minority_misidentified_as_angry)

non_minority_misidentified_as_angry = disgust_emotion_angry+ fear_emotion_angry+ happyness_emotion_angry+ neutrality_emotion_angry+ sadness_emotion_angry+ surprise_emotion_angry
print(non_minority_misidentified_as_angry)
rate_of_non_minority_misidentified_as_angry = non_minority_misidentified_as_angry/(all_non_minority_pictures-anger_how_many_pictures_are_in_the_list)
print(rate_of_non_minority_misidentified_as_angry)

minority_misidentified_as_disgust = anger_minority_emotion_disgust+ fear_minority_emotion_disgust+ happyness_minority_emotion_disgust+ neutrality_minority_emotion_disgust+ sadness_minority_emotion_disgust+ surprise_minority_emotion_disgust
print(minority_misidentified_as_disgust)
rate_of_minority_misidentified_as_disgust = minority_misidentified_as_disgust/(all_minority_pictures-disgust_minority_how_many_pictures_are_in_the_list)
print(rate_of_minority_misidentified_as_disgust)

non_minority_misidentified_as_disgust = anger_emotion_disgust+ fear_emotion_disgust+ happyness_emotion_disgust+ neutrality_emotion_disgust+ sadness_emotion_disgust+ surprise_emotion_disgust
print(non_minority_misidentified_as_disgust)
rate_of_non_minority_misidentified_as_disgust = non_minority_misidentified_as_disgust/(all_non_minority_pictures-disgust_how_many_pictures_are_in_the_list)
print(rate_of_non_minority_misidentified_as_disgust)

minority_misidentified_as_fear = anger_minority_emotion_fear+disgust_minority_emotion_fear+happyness_minority_emotion_fear+neutrality_minority_emotion_fear+sadness_minority_emotion_fear+surprise_minority_emotion_fear
print(minority_misidentified_as_fear)
rate_of_minority_misidentified_as_fear = minority_misidentified_as_fear/(all_minority_pictures-fear_minority_how_many_pictures_are_in_the_list)
print(rate_of_minority_misidentified_as_fear)

non_minority_misidentified_as_fear = anger_emotion_fear+disgust_emotion_fear+happyness_emotion_fear+neutrality_emotion_fear+sadness_emotion_fear+surprise_emotion_fear
print(non_minority_misidentified_as_fear)
rate_of_non_minority_misidentified_as_fear = non_minority_misidentified_as_fear/(all_non_minority_pictures-fear_how_many_pictures_are_in_the_list)
print(rate_of_non_minority_misidentified_as_fear)

minority_misidentified_as_happyness = anger_minority_emotion_happyness+ disgust_minority_emotion_happyness+ fear_minority_emotion_happyness+ neutrality_minority_emotion_happyness+ sadness_minority_emotion_happyness+ surprise_minority_emotion_happyness
print(minority_misidentified_as_happyness)
rate_of_minority_misidentified_as_happyness = minority_misidentified_as_happyness/(all_minority_pictures-happyness_minority_how_many_pictures_are_in_the_list)
print(rate_of_minority_misidentified_as_happyness)

non_minority_misidentified_as_happyness = anger_emotion_happyness+ disgust_emotion_happyness+ fear_emotion_happyness+ neutrality_emotion_happyness+ sadness_emotion_happyness+ surprise_emotion_happyness
print(non_minority_misidentified_as_happyness)
rate_of_non_minority_misidentified_as_happyness = non_minority_misidentified_as_happyness/(all_non_minority_pictures-happyness_how_many_pictures_are_in_the_list)
print(rate_of_non_minority_misidentified_as_happyness)

minority_misidentified_as_neutrality = anger_minority_emotion_neutral+disgust_minority_emotion_neutral+fear_minority_emotion_neutral+happyness_minority_emotion_neutral+sadness_minority_emotion_neutral+surprise_minority_emotion_neutral
print(minority_misidentified_as_neutrality)
rate_of_minority_misidentified_as_neutrality = minority_misidentified_as_neutrality/(all_minority_pictures-neutrality_minority_how_many_pictures_are_in_the_list)
print(rate_of_minority_misidentified_as_neutrality)

non_minority_misidentified_as_neutrality = anger_emotion_neutral+disgust_emotion_neutral+fear_emotion_neutral+happyness_emotion_neutral+sadness_emotion_neutral+surprise_emotion_neutral
print(non_minority_misidentified_as_neutrality)
rate_of_non_minority_misidentified_as_neutrality = non_minority_misidentified_as_neutrality/(all_non_minority_pictures-neutrality_how_many_pictures_are_in_the_list)
print(rate_of_non_minority_misidentified_as_neutrality)

minority_misidentified_as_sadness = anger_minority_emotion_sadness+ disgust_minority_emotion_sadness+ fear_minority_emotion_sadness+ happyness_minority_emotion_sadness+ neutrality_minority_emotion_sadness+ surprise_minority_emotion_sadness
print(minority_misidentified_as_sadness)
rate_of_minority_misidentified_as_sadness = minority_misidentified_as_sadness/(all_minority_pictures-sadness_minority_how_many_pictures_are_in_the_list)
print(rate_of_minority_misidentified_as_sadness)

non_minority_misidentified_as_sadness = anger_emotion_sadness+ disgust_emotion_sadness+ fear_emotion_sadness+ happyness_emotion_sadness+ neutrality_emotion_sadness+ surprise_emotion_sadness
print(non_minority_misidentified_as_sadness)
rate_of_non_minority_misidentified_as_sadness = non_minority_misidentified_as_sadness/(all_non_minority_pictures-sadness_how_many_pictures_are_in_the_list)
print(rate_of_non_minority_misidentified_as_sadness)

minority_misidentified_as_surprise = anger_minority_emotion_surprise+ disgust_minority_emotion_surprise+ fear_minority_emotion_surprise+ happyness_minority_emotion_surprise+ neutrality_minority_emotion_surprise+ sadness_minority_emotion_surprise
print(minority_misidentified_as_surprise)
rate_of_minority_misidentified_as_surprise = minority_misidentified_as_surprise/(all_minority_pictures-surprise_minority_how_many_pictures_are_in_the_list)
print(rate_of_minority_misidentified_as_surprise)

non_minority_misidentified_as_surprise = anger_emotion_surprise+ disgust_emotion_surprise+ fear_emotion_surprise+ happyness_emotion_surprise+ neutrality_emotion_surprise+ sadness_emotion_surprise
print(non_minority_misidentified_as_surprise)
rate_of_non_minority_misidentified_as_surprise = non_minority_misidentified_as_surprise/(all_non_minority_pictures-surprise_how_many_pictures_are_in_the_list)
print(rate_of_non_minority_misidentified_as_surprise)